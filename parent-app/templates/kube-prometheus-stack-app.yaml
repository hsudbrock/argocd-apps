apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-app
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 47.0.0
    chart: kube-prometheus-stack
    helm:
      values: |
        grafana:
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-staging"
            hosts:
              - grafana.sudbrock.eu
            tls:
              - secretName: grafana-secret-tls
                hosts:
                  - grafana.sudbrock.eu

          additionalDataSources:
            - name: AlertManager
              type: alertmanager
              url: http://kube-prometheus-stack-alertmanager.kube-prometheus-stack:9093
              editable: true
              access: proxy
              version: 2
              jsonData:
                implementation: prometheus
            - name: Loki
              type: loki
              url: http://loki-stack.loki-stack:3100
              editable: true

        prometheus:
          prometheusSpec:
            additionalScrapeConfigs:
              - job_name: kubernetes-pod-endpoints
                kubernetes_sd_configs:
                  - { role: pod }
                relabel_configs:
                  - action: keep
                    regex: true
                    source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
                  - action: keep
                    regex: true
                    source_labels: [ __meta_kubernetes_pod_annotationpresent_prometheus_io_port ]
                  - action: drop
                    regex: (kube-system|kube-prometheus-stack)
                    source_labels: [ __meta_kubernetes_namespace ]
                  - action: replace
                    regex: (https?)
                    source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scheme ]
                    target_label: __scheme__
                  - action: replace
                    regex: (.+)
                    source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
                    target_label: __metrics_path__
                  - action: replace
                    regex: ([^:]+)(?::\d+)?;(\d+)
                    replacement: $1:$2
                    source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
                    target_label: __address__
                  - { action: labelmap, regex: __meta_kubernetes_pod_label_(.+) }
                  - action: replace
                    source_labels: [ __meta_kubernetes_namespace ]
                    target_label: kubernetes_namespace
                  - action: replace
                    source_labels: [ __meta_kubernetes_service_name ]
                    target_label: kubernetes_name
              - job_name: kubernetes-service-endpoints
                kubernetes_sd_configs:
                  - role: service
                relabel_configs:

                  # annotation 'prometheus.io/scrape' must be set to 'true'
                  - action: keep
                    regex: true
                    source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]

                  # service cannot be in kube-system or prom namespaces
                  - action: drop
                    regex: (kube-system|kube-prometheus-stack)
                    source_labels: [ __meta_kubernetes_namespace ]

                  # service port name must end with word 'metrics'
                  - action: keep
                    regex: .*metrics
                    source_labels: [ __meta_kubernetes_service_port_name ]

                  # allow override of http scheme
                  - action: replace
                    regex: (https?)
                    source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
                    target_label: __scheme__

                  # allow override of default /metrics path
                  - action: replace
                    regex: (.+)
                    source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
                    target_label: __metrics_path__

                  # allow override of default port
                  - action: replace
                    regex: ([^:]+)(?::\d+)?;(\d+)
                    replacement: $1:$2
                    source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
                    target_label: __address__
                  - { action: labelmap, regex: __meta_kubernetes_service_label_(.+) }
                  - action: replace
                    source_labels: [ __meta_kubernetes_namespace ]
                    target_label: kubernetes_namespace
                  - action: replace
                    source_labels: [ __meta_kubernetes_service_name ]
                    target_label: kubernetes_name
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
